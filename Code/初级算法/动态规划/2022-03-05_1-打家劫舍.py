'''
打家劫舍
你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统。
如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
给定一个代表每个房屋存放金额的非负整数数组，计算你不触动警报装置的情况下，一夜之内能够偷窃到的最高金额。
---------------------------------------------
输入：[1,2,3,1]
输出：4
---------------------------------------------
'''
from typing import List


# 关键是找到递推公式
class Solution:
    def rob(self, nums: List[int]) -> int:
        if len(nums) == 0:
            return 0
        dp = [[nums[0], 0]]
        for i in range(1, len(nums)):
            dp.append([dp[i - 1][1] + nums[i], max(dp[i - 1][0], dp[i - 1][1])])
        return max(dp[- 1][0], dp[-1][1])
